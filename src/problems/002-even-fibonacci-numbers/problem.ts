// Problem 2: Even Fibonacci Numbers
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed n, find the sum of the even-valued terms.

const fiboEvenSum = (number: number): number => {
  const allFiboNumbers = getFiboNumbers(number);
  const evenFiboNumbers = getEvenNumbers(allFiboNumbers);
  return evenFiboNumbers.reduce((sum, val) => sum + val, 0);
};

const getFiboNumbers = (maxNumber: number): number[] => {
  let numbers: number[] = [1, 2];
  while (numbers[numbers.length - 1] < maxNumber) {
    const number1 = numbers[numbers.length - 1];
    const number2 = numbers[numbers.length - 2];
    const newNumber = number1 + number2;
    numbers = [...numbers, newNumber];
  }
  return numbers;
};

const getEvenNumbers = (numbers: number[]): number[] => {
  return numbers.filter((n) => n % 2 === 0);
};

export default fiboEvenSum;
